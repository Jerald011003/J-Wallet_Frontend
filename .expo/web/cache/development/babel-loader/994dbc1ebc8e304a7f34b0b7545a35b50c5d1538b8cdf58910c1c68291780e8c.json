{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React from 'react';\nimport { SignUp } from \"./screens\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { NavigationContainer, DefaultTheme } from '@react-navigation/native';\nimport { useFonts } from 'expo-font';\nimport Tabs from \"./navigation/tabs\";\nimport Food from \"./screens/Food\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar theme = _objectSpread(_objectSpread({}, DefaultTheme), {}, {\n  colors: _objectSpread(_objectSpread({}, DefaultTheme.colors), {}, {\n    border: \"transparent\"\n  })\n});\nvar Stack = createStackNavigator();\nvar App = function App() {\n  var _useFonts = useFonts({\n      \"Roboto-Black\": require(\"./assets/fonts/Roboto-Black.ttf\"),\n      \"Roboto-Bold\": require(\"./assets/fonts/Roboto-Bold.ttf\"),\n      \"Roboto-Regular\": require(\"./assets/fonts/Roboto-Regular.ttf\")\n    }),\n    _useFonts2 = _slicedToArray(_useFonts, 1),\n    loaded = _useFonts2[0];\n  if (!loaded) {\n    return null;\n  }\n  return _jsx(NavigationContainer, {\n    theme: theme,\n    children: _jsxs(Stack.Navigator, {\n      screenOptions: {\n        headerShown: false\n      },\n      initialRouteName: 'SignUp',\n      children: [_jsx(Stack.Screen, {\n        name: \"SignUp\",\n        component: SignUp\n      }), _jsx(Stack.Screen, {\n        name: \"HomeTabs\",\n        component: Tabs\n      }), _jsx(Stack.Screen, {\n        name: \"Food\",\n        component: Food\n      })]\n    })\n  });\n};\nexport default App;","map":{"version":3,"names":["React","SignUp","createStackNavigator","NavigationContainer","DefaultTheme","useFonts","Tabs","Food","jsx","_jsx","jsxs","_jsxs","theme","_objectSpread","colors","border","Stack","App","_useFonts","require","_useFonts2","_slicedToArray","loaded","children","Navigator","screenOptions","headerShown","initialRouteName","Screen","name","component"],"sources":["C:/Users/franc/Desktop/My_JuanBytes/juanbytes/App.js"],"sourcesContent":["/**\n * Sample React Native App\n * https://github.com/facebook/react-native\n *\n * @format\n * @flow strict-local\n */\n\nimport React from 'react';\n\nimport { SignUp } from \"./screens\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { NavigationContainer, DefaultTheme } from '@react-navigation/native';\nimport { useFonts } from 'expo-font';\nimport Tabs from \"./navigation/tabs\";\nimport Food from \"./screens/Food\";\nconst theme = {\n    ...DefaultTheme,\n    colors: {\n        ...DefaultTheme.colors,\n        border: \"transparent\",\n    },\n};\n\nconst Stack = createStackNavigator();\n\nconst App = () => {\n    const [loaded] = useFonts({\n        \"Roboto-Black\" : require('./assets/fonts/Roboto-Black.ttf'),\n        \"Roboto-Bold\" : require('./assets/fonts/Roboto-Bold.ttf'),\n        \"Roboto-Regular\" : require('./assets/fonts/Roboto-Regular.ttf'),\n    })\n    \n    if(!loaded){\n    return null;\n    }\n    return (\n        <NavigationContainer theme={theme}>\n            <Stack.Navigator\n                screenOptions={{\n                    headerShown: false\n                }}\n                initialRouteName={'SignUp'}\n            >\n                <Stack.Screen name=\"SignUp\" component={SignUp} />\n\n                {/* Tabs */}\n                <Stack.Screen name=\"HomeTabs\" component={Tabs} />\n\n                {/* <Stack.Screen name=\"Scan\" component={Scan} /> */}\n                <Stack.Screen name=\"Food\" component={Food} />\n            </Stack.Navigator>\n        </NavigationContainer>\n    )\n}\n\nexport default App;\n"],"mappings":";;;;AAQA,OAAOA,KAAK,MAAM,OAAO;AAEzB,SAASC,MAAM;AACf,SAASC,oBAAoB,QAAQ,yBAAyB;AAC9D,SAASC,mBAAmB,EAAEC,YAAY,QAAQ,0BAA0B;AAC5E,SAASC,QAAQ,QAAQ,WAAW;AACpC,OAAOC,IAAI;AACX,OAAOC,IAAI;AAAuB,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAClC,IAAMC,KAAK,GAAAC,aAAA,CAAAA,aAAA,KACJT,YAAY;EACfU,MAAM,EAAAD,aAAA,CAAAA,aAAA,KACCT,YAAY,CAACU,MAAM;IACtBC,MAAM,EAAE;EAAa;AACxB,EACJ;AAED,IAAMC,KAAK,GAAGd,oBAAoB,CAAC,CAAC;AAEpC,IAAMe,GAAG,GAAG,SAANA,GAAGA,CAAA,EAAS;EACd,IAAAC,SAAA,GAAiBb,QAAQ,CAAC;MACtB,cAAc,EAAGc,OAAO,kCAAkC,CAAC;MAC3D,aAAa,EAAGA,OAAO,iCAAiC,CAAC;MACzD,gBAAgB,EAAGA,OAAO,oCAAoC;IAClE,CAAC,CAAC;IAAAC,UAAA,GAAAC,cAAA,CAAAH,SAAA;IAJKI,MAAM,GAAAF,UAAA;EAMb,IAAG,CAACE,MAAM,EAAC;IACX,OAAO,IAAI;EACX;EACA,OACIb,IAAA,CAACN,mBAAmB;IAACS,KAAK,EAAEA,KAAM;IAAAW,QAAA,EAC9BZ,KAAA,CAACK,KAAK,CAACQ,SAAS;MACZC,aAAa,EAAE;QACXC,WAAW,EAAE;MACjB,CAAE;MACFC,gBAAgB,EAAE,QAAS;MAAAJ,QAAA,GAE3Bd,IAAA,CAACO,KAAK,CAACY,MAAM;QAACC,IAAI,EAAC,QAAQ;QAACC,SAAS,EAAE7B;MAAO,CAAE,CAAC,EAGjDQ,IAAA,CAACO,KAAK,CAACY,MAAM;QAACC,IAAI,EAAC,UAAU;QAACC,SAAS,EAAExB;MAAK,CAAE,CAAC,EAGjDG,IAAA,CAACO,KAAK,CAACY,MAAM;QAACC,IAAI,EAAC,MAAM;QAACC,SAAS,EAAEvB;MAAK,CAAE,CAAC;IAAA,CAChC;EAAC,CACD,CAAC;AAE9B,CAAC;AAED,eAAeU,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}