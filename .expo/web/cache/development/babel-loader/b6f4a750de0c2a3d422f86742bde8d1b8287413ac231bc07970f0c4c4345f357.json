{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport axios from 'axios';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { COLORS, SIZES, FONTS, images, icons } from \"../constants\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar Login = function Login(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    phoneNumber = _useState4[0],\n    setPhoneNumber = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    password = _useState6[0],\n    setPassword = _useState6[1];\n  var _useState7 = useState(''),\n    _useState8 = _slicedToArray(_useState7, 2),\n    csrfToken = _useState8[0],\n    setCsrfToken = _useState8[1];\n  var _useState9 = useState(false),\n    _useState10 = _slicedToArray(_useState9, 2),\n    showPassword = _useState10[0],\n    setShowPassword = _useState10[1];\n  useEffect(function () {\n    var fetchCsrfToken = function () {\n      var _ref2 = _asyncToGenerator(function* () {\n        try {\n          var response = yield axios.get('http://127.0.0.1:8000/csrf/');\n          setCsrfToken(response.data.csrfToken);\n        } catch (error) {\n          console.error('Error fetching CSRF token', error);\n        }\n      });\n      return function fetchCsrfToken() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    fetchCsrfToken();\n  }, []);\n  useEffect(function () {\n    setEmail('');\n    setPhoneNumber('');\n    setPassword('');\n  }, []);\n  var handleSubmit = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      if (!csrfToken) {\n        console.error('CSRF Token not available');\n        return;\n      }\n      try {\n        var response = yield axios.post('http://127.0.0.1:8000/login/', {\n          email: email,\n          phone_number: phoneNumber,\n          password: password\n        }, {\n          headers: {\n            'Content-Type': 'application/json',\n            'X-CSRFToken': csrfToken\n          }\n        });\n        yield AsyncStorage.setItem('accessToken', response.data.access);\n        yield AsyncStorage.setItem('refreshToken', response.data.refresh);\n        Alert.alert('Success', 'Login successful');\n        navigation.navigate('HomeTabs');\n      } catch (error) {\n        console.error('Error logging in', error);\n        Alert.alert('Login failed', 'Invalid email or phone number, or incorrect password.');\n      }\n    });\n    return function handleSubmit() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  return _jsx(KeyboardAvoidingView, {\n    behavior: Platform.OS === \"ios\" ? \"padding\" : null,\n    style: {\n      flex: 1\n    },\n    children: _jsx(LinearGradient, {\n      colors: [COLORS.white, COLORS.white],\n      style: {\n        flex: 1\n      },\n      children: _jsx(ScrollView, {})\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  input: _objectSpread(_objectSpread({\n    borderBottomWidth: 1,\n    borderBottomColor: COLORS.black,\n    height: 40,\n    color: COLORS.black\n  }, FONTS.body3), {}, {\n    marginVertical: SIZES.padding\n  }),\n  eyeIcon: {\n    position: 'absolute',\n    right: 0,\n    bottom: 10,\n    height: 30,\n    width: 30\n  },\n  eyeIconImage: {\n    height: 20,\n    width: 20,\n    tintColor: COLORS.black\n  },\n  loginButton: {\n    height: 60,\n    backgroundColor: COLORS.black,\n    borderRadius: SIZES.radius / 1.5,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  buttonText: _objectSpread({\n    color: COLORS.white\n  }, FONTS.h3)\n});\nexport default Login;","map":{"version":3,"names":["React","useState","useEffect","View","Text","TextInput","TouchableOpacity","Image","Alert","StyleSheet","ScrollView","KeyboardAvoidingView","Platform","axios","LinearGradient","COLORS","SIZES","FONTS","images","icons","AsyncStorage","jsx","_jsx","Login","_ref","navigation","_useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","phoneNumber","setPhoneNumber","_useState5","_useState6","password","setPassword","_useState7","_useState8","csrfToken","setCsrfToken","_useState9","_useState10","showPassword","setShowPassword","fetchCsrfToken","_ref2","_asyncToGenerator","response","get","data","error","console","apply","arguments","handleSubmit","_ref3","post","phone_number","headers","setItem","access","refresh","alert","navigate","behavior","OS","style","flex","children","colors","white","styles","create","input","_objectSpread","borderBottomWidth","borderBottomColor","black","height","color","body3","marginVertical","padding","eyeIcon","position","right","bottom","width","eyeIconImage","tintColor","loginButton","backgroundColor","borderRadius","radius","alignItems","justifyContent","buttonText","h3"],"sources":["C:/Users/franc/Desktop/JuanBytes_Frontend/juanbytes/screens/Login.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { View, Text, TextInput, TouchableOpacity, Image, Alert, StyleSheet, ScrollView, KeyboardAvoidingView, Platform } from 'react-native';\r\nimport axios from 'axios';\r\nimport { LinearGradient } from 'expo-linear-gradient';\r\nimport { COLORS, SIZES, FONTS, images, icons } from '../constants';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\nconst Login = ({ navigation }) => {\r\n  const [email, setEmail] = useState('');\r\n  const [phoneNumber, setPhoneNumber] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [csrfToken, setCsrfToken] = useState('');\r\n  const [showPassword, setShowPassword] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchCsrfToken = async () => {\r\n      try {\r\n        const response = await axios.get('http://127.0.0.1:8000/csrf/');\r\n        setCsrfToken(response.data.csrfToken);\r\n      } catch (error) {\r\n        console.error('Error fetching CSRF token', error);\r\n      }\r\n    };\r\n\r\n    fetchCsrfToken();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Clear form fields when the component mounts\r\n    setEmail('');\r\n    setPhoneNumber('');\r\n    setPassword('');\r\n  }, []);\r\n\r\n  const handleSubmit = async () => {\r\n    if (!csrfToken) {\r\n      console.error('CSRF Token not available');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await axios.post('http://127.0.0.1:8000/login/', {\r\n        email: email,\r\n        phone_number: phoneNumber,\r\n        password: password\r\n      }, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'X-CSRFToken': csrfToken\r\n        }\r\n      });\r\n\r\n      await AsyncStorage.setItem('accessToken', response.data.access);\r\n      await AsyncStorage.setItem('refreshToken', response.data.refresh);\r\n      Alert.alert('Success', 'Login successful');\r\n\r\n      // Navigate to the HomeTabs screen\r\n      navigation.navigate('HomeTabs');\r\n    } catch (error) {\r\n      console.error('Error logging in', error);\r\n      Alert.alert('Login failed', 'Invalid email or phone number, or incorrect password.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <KeyboardAvoidingView\r\n      behavior={Platform.OS === \"ios\" ? \"padding\" : null}\r\n      style={{ flex: 1 }}\r\n    >\r\n      <LinearGradient\r\n        colors={[COLORS.white, COLORS.white]}\r\n        style={{ flex: 1 }}\r\n      >\r\n        <ScrollView>\r\n          {/* Render other components */}\r\n          {/* ... */}\r\n        </ScrollView>\r\n      </LinearGradient>\r\n    </KeyboardAvoidingView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  input: {\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: COLORS.black,\r\n    height: 40,\r\n    color: COLORS.black,\r\n    ...FONTS.body3,\r\n    marginVertical: SIZES.padding\r\n  },\r\n  eyeIcon: {\r\n    position: 'absolute',\r\n    right: 0,\r\n    bottom: 10,\r\n    height: 30,\r\n    width: 30\r\n  },\r\n  eyeIconImage: {\r\n    height: 20,\r\n    width: 20,\r\n    tintColor: COLORS.black\r\n  },\r\n  loginButton: {\r\n    height: 60,\r\n    backgroundColor: COLORS.black,\r\n    borderRadius: SIZES.radius / 1.5,\r\n    alignItems: 'center',\r\n    justifyContent: 'center'\r\n  },\r\n  buttonText: {\r\n    color: COLORS.white,\r\n    ...FONTS.h3\r\n  }\r\n});\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}