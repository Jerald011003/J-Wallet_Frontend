{"ast":null,"code":"import _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(t) { var r = _isNativeReflectConstruct(); return function () { var e, o = _getPrototypeOf(t); if (r) { var s = _getPrototypeOf(this).constructor; e = Reflect.construct(o, arguments, s); } else e = o.apply(this, arguments); return _possibleConstructorReturn(this, e); }; }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nimport Platform from \"../Platform\";\nimport { CodedError } from \"./CodedError\";\nexport var UnavailabilityError = function (_CodedError) {\n  _inherits(UnavailabilityError, _CodedError);\n  var _super = _createSuper(UnavailabilityError);\n  function UnavailabilityError(moduleName, propertyName) {\n    _classCallCheck(this, UnavailabilityError);\n    return _super.call(this, 'ERR_UNAVAILABLE', `The method or property ${moduleName}.${propertyName} is not available on ${Platform.OS}, are you sure you've linked all the native dependencies properly?`);\n  }\n  return _createClass(UnavailabilityError);\n}(CodedError);","map":{"version":3,"names":["Platform","CodedError","UnavailabilityError","_CodedError","_inherits","_super","_createSuper","moduleName","propertyName","_classCallCheck","call","OS","_createClass"],"sources":["C:\\Users\\franc\\Desktop\\My_JuanBytes\\juanbytes\\node_modules\\expo-modules-core\\src\\errors\\UnavailabilityError.ts"],"sourcesContent":["import Platform from '../Platform';\nimport { CodedError } from './CodedError';\n\n/**\n * A class for errors to be thrown when a property is accessed which is\n * unavailable, unsupported, or not currently implemented on the running\n * platform.\n */\nexport class UnavailabilityError extends CodedError {\n  constructor(moduleName: string, propertyName: string) {\n    super(\n      'ERR_UNAVAILABLE',\n      `The method or property ${moduleName}.${propertyName} is not available on ${Platform.OS}, are you sure you've linked all the native dependencies properly?`\n    );\n  }\n}\n"],"mappings":";;;;;;;AAAA,OAAOA,QAAQ;AACf,SAASC,UAAU;AAOnB,WAAaC,mBAAoB,aAAAC,WAAA;EAAAC,SAAA,CAAAF,mBAAA,EAAAC,WAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,mBAAA;EAC/B,SAAAA,oBAAYK,UAAkB,EAAEC,YAAoB;IAAAC,eAAA,OAAAP,mBAAA;IAAA,OAAAG,MAAA,CAAAK,IAAA,OAEhD,iBAAiB,EACjB,0BAA0BH,UAAU,IAAIC,YAAY,wBAAwBR,QAAQ,CAACW,EAAE,oEAAoE;EAE/J;EAAC,OAAAC,YAAA,CAAAV,mBAAA;AAAA,EANsCD,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}