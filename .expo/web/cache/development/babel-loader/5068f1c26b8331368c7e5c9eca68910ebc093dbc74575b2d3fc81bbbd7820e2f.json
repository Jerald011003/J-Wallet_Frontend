{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport axios from 'axios';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar NotificationsScreen = function NotificationsScreen() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    notifications = _useState2[0],\n    setNotifications = _useState2[1];\n  var _useState3 = useState(true),\n    _useState4 = _slicedToArray(_useState3, 2),\n    loading = _useState4[0],\n    setLoading = _useState4[1];\n  useEffect(function () {\n    var fetchNotifications = function () {\n      var _ref = _asyncToGenerator(function* () {\n        try {\n          var response = yield axios.get('http://127.0.0.1:8000/notifications/');\n          setNotifications(response.data);\n          setLoading(false);\n        } catch (error) {\n          console.error(\"Error fetching notifications:\", error);\n          setLoading(false);\n        }\n      });\n      return function fetchNotifications() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    fetchNotifications();\n  }, []);\n  var renderNotificationItem = function renderNotificationItem(_ref2) {\n    var item = _ref2.item;\n    return _jsxs(View, {\n      style: styles.notificationItem,\n      children: [_jsx(Text, {\n        style: styles.notificationTitle,\n        children: item.title\n      }), _jsx(Text, {\n        style: styles.notificationMessage,\n        children: item.message\n      }), _jsx(Text, {\n        style: styles.notificationDate,\n        children: new Date(item.created_at).toLocaleString()\n      })]\n    });\n  };\n  return _jsx(View, {\n    style: styles.container,\n    children: loading ? _jsx(Text, {\n      children: \"Loading...\"\n    }) : _jsx(FlatList, {\n      data: notifications,\n      keyExtractor: function keyExtractor(item) {\n        return item.id.toString();\n      },\n      renderItem: renderNotificationItem\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20,\n    backgroundColor: '#fff'\n  },\n  notificationItem: {\n    marginBottom: 20,\n    padding: 15,\n    backgroundColor: '#f8f8f8',\n    borderRadius: 5\n  },\n  notificationTitle: {\n    fontSize: 18,\n    fontWeight: 'bold'\n  },\n  notificationMessage: {\n    fontSize: 16,\n    marginVertical: 10\n  },\n  notificationDate: {\n    fontSize: 14,\n    color: '#888'\n  }\n});\nexport default NotificationsScreen;","map":{"version":3,"names":["React","useEffect","useState","View","Text","FlatList","StyleSheet","axios","jsx","_jsx","jsxs","_jsxs","NotificationsScreen","_useState","_useState2","_slicedToArray","notifications","setNotifications","_useState3","_useState4","loading","setLoading","fetchNotifications","_ref","_asyncToGenerator","response","get","data","error","console","apply","arguments","renderNotificationItem","_ref2","item","style","styles","notificationItem","children","notificationTitle","title","notificationMessage","message","notificationDate","Date","created_at","toLocaleString","container","keyExtractor","id","toString","renderItem","create","flex","padding","backgroundColor","marginBottom","borderRadius","fontSize","fontWeight","marginVertical","color"],"sources":["C:/Users/franc/Desktop/JuanBytes_Frontend/juanbytes/screens/Notif.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { View, Text, FlatList, StyleSheet } from 'react-native';\r\nimport axios from 'axios';\r\n\r\nconst NotificationsScreen = () => {\r\n    const [notifications, setNotifications] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        const fetchNotifications = async () => {\r\n            try {\r\n                const response = await axios.get('http://127.0.0.1:8000/notifications/');\r\n                setNotifications(response.data);\r\n                setLoading(false);\r\n            } catch (error) {\r\n                console.error(\"Error fetching notifications:\", error);\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchNotifications();\r\n    }, []);\r\n\r\n    const renderNotificationItem = ({ item }) => (\r\n        <View style={styles.notificationItem}>\r\n            <Text style={styles.notificationTitle}>{item.title}</Text>\r\n            <Text style={styles.notificationMessage}>{item.message}</Text>\r\n            <Text style={styles.notificationDate}>{new Date(item.created_at).toLocaleString()}</Text>\r\n        </View>\r\n    );\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            {loading ? (\r\n                <Text>Loading...</Text>\r\n            ) : (\r\n                <FlatList\r\n                    data={notifications}\r\n                    keyExtractor={(item) => item.id.toString()}\r\n                    renderItem={renderNotificationItem}\r\n                />\r\n            )}\r\n        </View>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        padding: 20,\r\n        backgroundColor: '#fff',\r\n    },\r\n    notificationItem: {\r\n        marginBottom: 20,\r\n        padding: 15,\r\n        backgroundColor: '#f8f8f8',\r\n        borderRadius: 5,\r\n    },\r\n    notificationTitle: {\r\n        fontSize: 18,\r\n        fontWeight: 'bold',\r\n    },\r\n    notificationMessage: {\r\n        fontSize: 16,\r\n        marginVertical: 10,\r\n    },\r\n    notificationDate: {\r\n        fontSize: 14,\r\n        color: '#888',\r\n    },\r\n});\r\n\r\nexport default NotificationsScreen;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,QAAA;AAAA,OAAAC,UAAA;AAEnD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA;AAE1B,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAmBA,CAAA,EAAS;EAC9B,IAAAC,SAAA,GAA0CX,QAAQ,CAAC,EAAE,CAAC;IAAAY,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA/CG,aAAa,GAAAF,UAAA;IAAEG,gBAAgB,GAAAH,UAAA;EACtC,IAAAI,UAAA,GAA8BhB,QAAQ,CAAC,IAAI,CAAC;IAAAiB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAArCE,OAAO,GAAAD,UAAA;IAAEE,UAAU,GAAAF,UAAA;EAE1BlB,SAAS,CAAC,YAAM;IACZ,IAAMqB,kBAAkB;MAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,aAAY;QACnC,IAAI;UACA,IAAMC,QAAQ,SAASlB,KAAK,CAACmB,GAAG,CAAC,sCAAsC,CAAC;UACxET,gBAAgB,CAACQ,QAAQ,CAACE,IAAI,CAAC;UAC/BN,UAAU,CAAC,KAAK,CAAC;QACrB,CAAC,CAAC,OAAOO,KAAK,EAAE;UACZC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;UACrDP,UAAU,CAAC,KAAK,CAAC;QACrB;MACJ,CAAC;MAAA,gBATKC,kBAAkBA,CAAA;QAAA,OAAAC,IAAA,CAAAO,KAAA,OAAAC,SAAA;MAAA;IAAA,GASvB;IAEDT,kBAAkB,CAAC,CAAC;EACxB,CAAC,EAAE,EAAE,CAAC;EAEN,IAAMU,sBAAsB,GAAG,SAAzBA,sBAAsBA,CAAAC,KAAA;IAAA,IAAMC,IAAI,GAAAD,KAAA,CAAJC,IAAI;IAAA,OAClCvB,KAAA,CAACR,IAAI;MAACgC,KAAK,EAAEC,MAAM,CAACC,gBAAiB;MAAAC,QAAA,GACjC7B,IAAA,CAACL,IAAI;QAAC+B,KAAK,EAAEC,MAAM,CAACG,iBAAkB;QAAAD,QAAA,EAAEJ,IAAI,CAACM;MAAK,CAAO,CAAC,EAC1D/B,IAAA,CAACL,IAAI;QAAC+B,KAAK,EAAEC,MAAM,CAACK,mBAAoB;QAAAH,QAAA,EAAEJ,IAAI,CAACQ;MAAO,CAAO,CAAC,EAC9DjC,IAAA,CAACL,IAAI;QAAC+B,KAAK,EAAEC,MAAM,CAACO,gBAAiB;QAAAL,QAAA,EAAE,IAAIM,IAAI,CAACV,IAAI,CAACW,UAAU,CAAC,CAACC,cAAc,CAAC;MAAC,CAAO,CAAC;IAAA,CACvF,CAAC;EAAA,CACV;EAED,OACIrC,IAAA,CAACN,IAAI;IAACgC,KAAK,EAAEC,MAAM,CAACW,SAAU;IAAAT,QAAA,EACzBlB,OAAO,GACJX,IAAA,CAACL,IAAI;MAAAkC,QAAA,EAAC;IAAU,CAAM,CAAC,GAEvB7B,IAAA,CAACJ,QAAQ;MACLsB,IAAI,EAAEX,aAAc;MACpBgC,YAAY,EAAE,SAAAA,aAACd,IAAI;QAAA,OAAKA,IAAI,CAACe,EAAE,CAACC,QAAQ,CAAC,CAAC;MAAA,CAAC;MAC3CC,UAAU,EAAEnB;IAAuB,CACtC;EACJ,CACC,CAAC;AAEf,CAAC;AAED,IAAMI,MAAM,GAAG9B,UAAU,CAAC8C,MAAM,CAAC;EAC7BL,SAAS,EAAE;IACPM,IAAI,EAAE,CAAC;IACPC,OAAO,EAAE,EAAE;IACXC,eAAe,EAAE;EACrB,CAAC;EACDlB,gBAAgB,EAAE;IACdmB,YAAY,EAAE,EAAE;IAChBF,OAAO,EAAE,EAAE;IACXC,eAAe,EAAE,SAAS;IAC1BE,YAAY,EAAE;EAClB,CAAC;EACDlB,iBAAiB,EAAE;IACfmB,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE;EAChB,CAAC;EACDlB,mBAAmB,EAAE;IACjBiB,QAAQ,EAAE,EAAE;IACZE,cAAc,EAAE;EACpB,CAAC;EACDjB,gBAAgB,EAAE;IACde,QAAQ,EAAE,EAAE;IACZG,KAAK,EAAE;EACX;AACJ,CAAC,CAAC;AAEF,eAAejD,mBAAmB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}